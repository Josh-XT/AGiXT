services:
  agixt:
    build:
      context: .
      dockerfile: Dockerfile
    init: true
    restart: unless-stopped
    environment:
      DATABASE_TYPE: ${DATABASE_TYPE:-postgres}
      DATABASE_NAME: ${DATABASE_NAME:-postgres}
      DATABASE_HOST: ${DATABASE_HOST:-postgres}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_USER: ${DATABASE_USER:-postgres}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-postgres}
      UVICORN_WORKERS: ${UVICORN_WORKERS:-10}
      AGIXT_API_KEY: ${AGIXT_API_KEY:-None}
      AGIXT_URI: ${AGIXT_URI:-http://agixt:7437}
      APP_URI: ${APP_URI:-http://localhost:3437}
      DISABLED_EXTENSIONS: ${DISABLED_EXTENSIONS}
      DISABLED_PROVIDERS: ${DISABLED_PROVIDERS}
      WORKING_DIRECTORY: ${WORKING_DIRECTORY:-/agixt/WORKSPACE}
      REGISTRATION_DISABLED: ${REGISTRATION_DISABLED:-false}
      TOKENIZERS_PARALLELISM: "false"
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      ALEXA_CLIENT_ID: ${ALEXA_CLIENT_ID}
      ALEXA_CLIENT_SECRET: ${ALEXA_CLIENT_SECRET}
      AWS_CLIENT_ID: ${AWS_CLIENT_ID}
      AWS_CLIENT_SECRET: ${AWS_CLIENT_SECRET}
      AWS_REGION: ${AWS_REGION}
      AWS_USER_POOL_ID: ${AWS_USER_POOL_ID}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      FITBIT_CLIENT_ID: ${FITBIT_CLIENT_ID}
      FITBIT_CLIENT_SECRET: ${FITBIT_CLIENT_SECRET}
      GARMIN_CLIENT_ID: ${GARMIN_CLIENT_ID}
      GARMIN_CLIENT_SECRET: ${GARMIN_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      MICROSOFT_CLIENT_ID: ${MICROSOFT_CLIENT_ID}
      MICROSOFT_CLIENT_SECRET: ${MICROSOFT_CLIENT_SECRET}
      META_APP_ID: ${META_APP_ID}
      META_APP_SECRET: ${META_APP_SECRET}
      META_BUSINESS_ID: ${META_BUSINESS_ID}
      TESLA_CLIENT_ID: ${TESLA_CLIENT_ID}
      TESLA_CLIENT_SECRET: ${TESLA_CLIENT_SECRET}
      WALMART_CLIENT_ID: ${WALMART_CLIENT_ID}
      WALMART_CLIENT_SECRET: ${WALMART_CLIENT_SECRET}
      WALMART_MARKETPLACE_ID: ${WALMART_MARKETPLACE_ID}
      X_CLIENT_ID: ${X_CLIENT_ID}
      X_CLIENT_SECRET: ${X_CLIENT_SECRET}
      STORAGE_BACKEND: ${STORAGE_BACKEND:-s3}
      STORAGE_CONTAINER: ${STORAGE_CONTAINER:-agixt-workspace}
      B2_KEY_ID: ${B2_KEY_ID:-}
      B2_APPLICATION_KEY: ${B2_APPLICATION_KEY:-}
      B2_REGION: ${B2_REGION:-us-west-002}
      S3_BUCKET: ${S3_BUCKET:-agixt-workspace}
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-minioadmin}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-minioadmin}
      AWS_STORAGE_REGION: ${AWS_STORAGE_REGION:-us-east-1}
      AZURE_STORAGE_ACCOUNT_NAME: ${AZURE_STORAGE_ACCOUNT_NAME:-}
      AZURE_STORAGE_KEY: ${AZURE_STORAGE_KEY:-}
      SEED_DATA: ${SEED_DATA:-true}
      AGENT_NAME: ${AGIXT_AGENT:-XT}
      AGENT_PERSONA: ${AGENT_PERSONA}
      TRAINING_URLS: ${TRAINING_URLS}
      ENABLED_COMMANDS: ${ENABLED_COMMANDS}
      EZLOCALAI_VOICE: ${EZLOCALAI_VOICE}
      ANTHROPIC_MODEL: ${ANTHROPIC_MODEL}
      DEEPSEEK_MODEL: ${DEEPSEEK_MODEL}
      AZURE_MODEL: ${AZURE_MODEL}
      GOOGLE_MODEL: ${GOOGLE_MODEL}
      OPENAI_MODEL: ${OPENAI_MODEL}
      XAI_MODEL: ${XAI_MODEL}
      EZLOCALAI_MAX_TOKENS: ${EZLOCALAI_MAX_TOKENS}
      DEEPSEEK_MAX_TOKENS: ${DEEPSEEK_MAX_TOKENS}
      AZURE_MAX_TOKENS: ${AZURE_MAX_TOKENS}
      XAI_MAX_TOKENS: ${XAI_MAX_TOKENS}
      OPENAI_MAX_TOKENS: ${OPENAI_MAX_TOKENS}
      ANTHROPIC_MAX_TOKENS: ${ANTHROPIC_MAX_TOKENS}
      GOOGLE_MAX_TOKENS: ${GOOGLE_MAX_TOKENS}
      AZURE_API_KEY: ${AZURE_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      EZLOCALAI_API_KEY: ${EZLOCALAI_API_KEY}
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
      XAI_API_KEY: ${XAI_API_KEY}
      AZURE_OPENAI_ENDPOINT: ${AZURE_OPENAI_ENDPOINT}
      EZLOCALAI_URI: ${EZLOCALAI_URI}
      ROTATION_EXCLUSIONS: ${ROTATION_EXCLUSIONS}
      GRAPHIQL: ${GRAPHIQL:-true}
      EXTENSIONS_HUB: ${EXTENSIONS_HUB:-}
      EXTENSIONS_HUB_TOKEN: ${EXTENSIONS_HUB_TOKEN:-}
      TZ: ${TZ:-America/New_York}
    ports:
      - "${AGIXT_PORT:-7437}:7437"
    volumes:
      - ./models:/agixt/models
    depends_on:
      - minio
      - postgres
  agixtinteractive:
    image: joshxt/agixt-interactive:main
    init: true
    environment:
      MODE: production
      NEXT_TELEMETRY_DISABLED: 1
      AGIXT_AGENT: ${AGIXT_AGENT:-XT}
      AGIXT_FOOTER_MESSAGE: ${AGIXT_FOOTER_MESSAGE:-AGiXT 2025}
      AGIXT_SERVER: ${AGIXT_SERVER:-http://localhost:7437}
      APP_DESCRIPTION: ${APP_DESCRIPTION-AGiXT is an advanced artificial intelligence agent orchestration agent.}
      APP_NAME: ${APP_NAME:-AGiXT}
      APP_URI: ${APP_URI:-http://localhost:3437}
      LOG_VERBOSITY_SERVER: ${LOG_VERBOSITY_SERVER:-3}
      AGIXT_FILE_UPLOAD_ENABLED: ${AGIXT_FILE_UPLOAD_ENABLED:-true}
      AGIXT_VOICE_INPUT_ENABLED: ${AGIXT_VOICE_INPUT_ENABLED:-true}
      AGIXT_RLHF: ${AGIXT_RLHF:-true}
      AGIXT_ALLOW_MESSAGE_EDITING: ${AGIXT_ALLOW_MESSAGE_EDITING:-true}
      AGIXT_ALLOW_MESSAGE_DELETION: ${AGIXT_ALLOW_MESSAGE_DELETION:-true}
      AGIXT_SHOW_OVERRIDE_SWITCHES: ${AGIXT_SHOW_OVERRIDE_SWITCHES:-tts,websearch,analyze-user-input}
      ALLOW_EMAIL_SIGN_IN: ${ALLOW_EMAIL_SIGN_IN:-true}
      TZ: ${TZ:-America/New_York}
    ports:
      - "${AGIXT_INTERACTIVE_PORT:-3437}:3437"
    restart: unless-stopped
    volumes:
      - ./node_modules:/app/node_modules
  postgres:
    image: postgres
    container_name: postgres
    ports:
      - ${AGIXTDB_PORT:-5432}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - ./models/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z
    container_name: agixt-minio
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9001"
    volumes:
      - ./WORKSPACE:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
