{
  "swagger": "2.0",
  "info": {
    "title": "Agent-LLM Flask API",
    "description": "API for interacting with Agent-LLM (Language Learning Model)",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/api/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/add_agent/{agent_name}": {
      "post": {
        "tags": [
          "agent"
        ],
        "summary": "Creates a new agent",
        "operationId": "addAgent",
        "parameters": [
          {
            "name": "agent_name",
            "in": "path",
            "description": "Name of the agent",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Agent added",
            "schema": {
              "$ref": "#/definitions/AddAgentResponse"
            }
          }
        }
      }
    },
    "/delete_agent/{agent_name}": {
      "delete": {
        "tags": [
          "agent"
        ],
        "summary": "Deletes an existing agent",
        "operationId": "deleteAgent",
        "parameters": [
          {
            "name": "agent_name",
            "in": "path",
            "description": "Name of the agent",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Agent deleted",
            "schema": {
              "$ref": "#/definitions/DeleteAgentResponse"
            }
          },
          "404": {
            "description": "Agent file not found"
          }
        }
      }
    },
    "/get_agents": {
      "get": {
        "tags": [
          "agent"
        ],
        "summary": "Retrieves a list of all agents",
        "operationId": "getAgents",
        "responses": {
          "200": {
            "description": "List of agents",
            "schema": {
              "$ref": "#/definitions/GetAgentsResponse"
            }
          }
        }
      }
    },
    "/get_chat_history/{agent_name}": {
      "get": {
        "tags": [
          "agent"
        ],
        "summary": "Retrieves the chat history of an agent",
        "operationId": "getChatHistory",
        "parameters": [
          {
            "name": "agent_name",
            "in": "path",
            "description": "Name of the agent",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Chat history",
            "schema": {
              "$ref": "#/definitions/GetChatHistoryResponse"
            }
          }
        }
      }
    },
    "/instruct": {
      "post": {
        "tags": [
          "agent"
        ],
        "summary": "Instructs the agent to perform a task",
        "operationId": "instruct",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objective and command settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstructRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agent response",
            "schema": {
              "$ref": "#/definitions/InstructResponse"
            }
          }
        }
      }
    },
    "/set_objective": {
      "post": {
        "tags": [
          "task"
        ],
        "summary": "Sets an objective for the babyagi instance",
        "operationId": "setObjective",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Objective",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetObjectiveRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Objective updated",
            "schema": {
              "$ref": "#/definitions/SetObjectiveResponse"
            }
          }
        }
      }
    },
    "/add_initial_task": {
      "post": {
        "tags": [
          "task"
        ],
        "summary": "Adds an initial task to the babyagi instance",
        "operationId": "addInitialTask",
        "responses": {
          "200": {
            "description": "Initial task added",
            "schema": {
              "$ref": "#/definitions/AddInitialTaskResponse"
            }
          }
        }
      }
    },
    "/execute_next_task": {
      "get": {
        "tags": [
          "task"
        ],
        "summary": "Executes the next task in the babyagi instance",
        "operationId": "executeNextTask",
        "responses": {
          "200": {
            "description": "Next task executed",
            "schema": {
              "$ref": "#/definitions/ExecuteNextTaskResponse"
            }
          }
        }
      }
    },
    "/create_task": {
      "post": {
        "tags": [
          "task"
        ],
        "summary": "Creates a new task with the given objective and result",
        "operationId": "createTask",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Task details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New tasks created",
            "schema": {
              "$ref": "#/definitions/CreateTaskResponse"
            }
          }
        }
      }
    },
    "/prioritize_tasks": {
      "post": {
        "tags": [
          "task"
        ],
        "summary": "Prioritizes tasks based on the given task ID",
        "operationId": "prioritizeTasks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Task ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrioritizeTasksRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks prioritized",
            "schema": {
              "$ref": "#/definitions/PrioritizeTasksResponse"
            }
          }
        }
      }
    },
    "/execute_task": {
      "post": {
        "tags": [
          "task"
        ],
        "summary": "Executes a specific task with the given objective",
        "operationId": "executeTask",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Task details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task executed",
            "schema": {
              "$ref": "#/definitions/ExecuteTaskResponse"
            }
          }
        }
      }
    },
    "/get_commands": {
      "get": {
        "tags": [
          "commands"
        ],
        "summary": "Retrieves a list of available commands",
        "operationId": "getCommands",
        "responses": {
          "200": {
            "description": "List of commands",
            "schema": {
              "$ref": "#/definitions/GetCommandsResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AddAgentResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "agent_file": {
          "type": "string"
        }
      }
    },
    "DeleteAgentResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "GetAgentsResponse": {
      "type": "object",
      "properties": {
        "agents": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetChatHistoryResponse": {
      "type": "object",
      "properties": {
        "chat_history": {
          "type": "string"
        }
      }
    },
    "InstructRequest": {
      "type": "object",
      "properties": {
        "prompt": {
          "type": "string"
        },
        "commands_enabled": {
          "type": "boolean"
        }
      }
    },
    "InstructResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        }
      }
    },
    "SetObjectiveRequest": {
      "type": "object",
      "properties": {
        "objective": {
          "type": "string"
        }
      }
    },
    "SetObjectiveResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "AddInitialTaskResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "ExecuteNextTaskResponse": {
      "type": "object",
      "properties": {
        "task": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "task_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateTaskRequest": {
      "type": "object",
      "properties": {
        "objective": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "task_description": {
          "type": "string"
        },
        "task_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateTaskResponse": {
      "type": "object",
      "properties": {
        "new_tasks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PrioritizeTasksRequest": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        }
      }
    },
    "PrioritizeTasksResponse": {
      "type": "object",
      "properties": {
        "task_list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExecuteTaskRequest": {
      "type": "object",
      "properties": {
        "objective": {
          "type": "string"
        },
        "task": {
          "type": "string"
        }
      }
    },
    "ExecuteTaskResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    },
    "GetCommandsResponse": {
      "type": "object",
      "properties": {
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}