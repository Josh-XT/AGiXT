{
  "swagger": "2.0",
  "info": {
      "title": "Agent-LLM Flask API",
      "description": "API for interacting with the Agent-LLM system",
      "version": "1.0.0"
  },
  "basePath": "/api",
  "schemes": [
      "http"
  ],
  "consumes": [
      "application/json"
  ],
  "produces": [
      "application/json"
  ],
  "paths": {
      "/add_agent/{agent_name}": {
          "post": {
              "tags": [
                  "Agents"
              ],
              "summary": "Add agent",
              "description": "Creates a new YAML file for storing the agent's memory and a JSON file for storing configuration settings",
              "parameters": [
                  {
                      "name": "agent_name",
                      "in": "path",
                      "description": "Name of the agent to add",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Agent added successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "message": {
                                  "type": "string"
                              },
                              "agent_file": {
                                  "type": "string"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/delete_agent/{agent_name}": {
          "delete": {
              "tags": [
                  "Agents"
              ],
              "summary": "Delete agent",
              "description": "Deletes the YAML file and directory associated with the specified agent",
              "parameters": [
                  {
                      "name": "agent_name",
                      "in": "path",
                      "description": "Name of the agent to delete",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Agent deleted successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "message": {
                                  "type": "string"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Agent file not found"
                  }
              }
          }
      },
      "/get_agents": {
          "get": {
              "tags": [
                  "Agents"
              ],
              "summary": "Get agents",
              "description": "Retrieves a list of all available agents",
              "responses": {
                  "200": {
                      "description": "List of agents",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "agents": {
                                  "type": "array",
                                  "items": {
                                      "type": "string"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/get_chat_history/{agent_name}": {
          "get": {
              "tags": [
                  "Agents"
              ],
              "summary": "Get chat history",
              "description": "Retrieves the chat history for a specified agent",
              "parameters": [
                  {
                      "name": "agent_name",
                      "in": "path",
                      "description": "Name of the agent to retrieve chat history for",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Chat history retrieved successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "chat_history": {
                                  "type": "string"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/instruct": {
          "post": {
              "tags": [
                  "Agents"
              ],
              "summary": "Instruct agent",
              "description": "Runs the AgentLLM system with a specified objective and returns the response",
              "parameters": [
                  {
                      "name": "body",
                      "in": "body",
                      "description": "JSON object containing the objective to run",
                      "required": true,
                      "schema": {
                          "type": "object",
                          "properties": {
                              "prompt": {
                                  "type": "string"
                              }
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Agent instructed successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "response": {
                                  "type": "string"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/set_objective": {
          "post": {
              "tags": [
                  "Baby AGI"
              ],
              "summary": "Set objective",
              "description": "Sets the objective for the Baby AGI system",
              "parameters": [
                  {
                      "name": "body",
                      "in": "body",
                      "description": "JSON object containing the new objective",
                      "required": true,
                      "schema": {
                          "type": "object",
                          "properties": {
                              "objective": {
                                  "type": "string"
                              }
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Objective updated successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "message": {
                                  "type": "string"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/add_initial_task": {
          "post": {
              "tags": [
                  "Baby AGI"
              ],
              "summary": "Add initial task",
              "description": "Adds an initial task to the Baby AGI system",
              "responses": {
                  "200": {
                      "description": "Initial task added successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "message": {
                                  "type": "string"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/execute_next_task": {
          "get": {
              "tags": [
                  "Baby AGI"
              ],
              "summary": "Execute next task",
              "description": "Executes the next task in the Baby AGI system",
              "responses": {
                  "200": {
                      "description": "Task executed successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "task": {
                                  "type": "string"
                              },
                              "result": {
                                  "type": "string"
                              },
                              "task_list": {
                                  "type": "array",
                                  "items": {
                                      "type": "string"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/create_task": {
          "post": {
              "tags": [
                  "Baby AGI"
              ],
              "summary": "Create task",
              "description": "Creates a new task in the Baby AGI system",
              "parameters": [
                  {
                      "name": "body",
                      "in": "body",
                      "description": "JSON object containing information for the new task",
                      "required": true,
                      "schema": {
                          "type": "object",
                          "properties": {
                              "objective": {
                                  "type": "string"
                              },
                              "result": {
                                  "type": "string"
                              },
                              "task_description": {
                                  "type": "string"
                              },
                              "task_list": {
                                  "type": "array",
                                  "items": {
                                      "type": "string"
                                  }
                              }
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Task created successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "new_tasks": {
                                  "type": "array",
                                  "items": {
                                      "type": "string"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/prioritize_tasks": {
          "post": {
              "tags": [
                  "Baby AGI"
              ],
              "summary": "Prioritize tasks",
              "description": "Changes the priority of a task in the Baby AGI system",
              "parameters": [
                  {
                      "name": "body",
                      "in": "body",
                      "description": "JSON object containing the ID of the task to prioritize",
                      "required": true,
                      "schema": {
                          "type": "object",
                          "properties": {
                              "task_id": {
                                  "type": "string"
                              }
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Tasks prioritized successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "task_list": {
                                  "type": "array",
                                  "items": {
                                      "type": "string"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/execute_task": {
          "post": {
              "tags": [
                  "Baby AGI"
              ],
              "summary": "Execute task",
              "description": "Executes a task in the Baby AGI system",
              "parameters": [
                  {
                      "name": "body",
                      "in": "body",
                      "description": "JSON object containing the objective and task to execute",
                      "required": true,
                      "schema": {
                          "type": "object",
                          "properties": {
                              "objective": {
                                  "type": "string"
                              },
                              "task": {
                                  "type": "string"
                              }
                          }
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Task executed successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "result": {
                                  "type": "string"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/get_commands": {
          "get": {
              "tags": [
                  "Commands"
              ],
              "summary": "Get commands",
              "description": "Retrieves a list of all available commands",
              "responses": {
                  "200": {
                      "description": "List of commands",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "commands": {
                                  "type": "array",
                                  "items": {
                                      "type": "string"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/get_available_commands/{agent_name}": {
          "get": {
              "tags": [
                  "Commands"
              ],
              "summary": "Get available commands",
              "description": "Retrieves a list of all available commands for a specified agent",
              "parameters": [
                  {
                      "name": "agent_name",
                      "in": "path",
                      "description": "Name of the agent to retrieve available commands for",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "List of available commands",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "available_commands": {
                                  "type": "array",
                                  "items": {
                                      "type": "string"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/enable_command/{agent_name}/{command_name}": {
          "post": {
              "tags": [
                  "Commands"
              ],
              "summary": "Enable command",
              "description": "Enables a specified command for a specified agent",
              "parameters": [
                  {
                      "name": "agent_name",
                      "in": "path",
                      "description": "Name of the agent to enable the command for",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "command_name",
                      "in": "path",
                      "description": "Name of the command to enable",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Command enabled successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "message": {
                                  "type": "string"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Command not found"
                  }
              }
          }
      },
      "/disable_command/{agent_name}/{command_name}": {
          "post": {
              "tags": [
                  "Commands"
              ],
              "summary": "Disable command",
              "description": "Disables a specified command for a specified agent",
              "parameters": [
                  {
                      "name": "agent_name",
                      "in": "path",
                      "description": "Name of the agent to disable the command for",
                      "required": true,
                      "type": "string"
                  },
                  {
                      "name": "command_name",
                      "in": "path",
                      "description": "Name of the command to disable",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Command disabled successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "message": {
                                  "type": "string"
                              }
                          }
                      }
                  },
                  "404": {
                      "description": "Command not found"
                  }
              }
          }
      },
      "/disable_all_commands/{agent_name}": {
          "post": {
              "tags": [
                  "Commands"
              ],
              "summary": "Disable all commands",
              "description": "Disables all commands for a specified agent",
              "parameters": [
                  {
                      "name": "agent_name",
                      "in": "path",
                      "description": "Name of the agent to disable all commands for",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                  "200": {
                      "description": "All commands disabled successfully",
                      "schema": {
                          "type": "object",
                          "properties": {
                              "message": {
                                  "type": "string"
                              }
                          }
                      }
                  }
              }
          }
      }
  }
}